1. How did viewing a diff between two versions of a file help you see the bug that was introduced?

	When I saw a diff between two versions of a file, I could see where the mistake was. 
	By comparing the two versions, I could decide which one wos wrong and correct it. 

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	I could always check what was done right and reuse it and what was wrong to avoid it.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

	The pro is that you can choose to commit when a specific task is done.
	The con is that you can forget to commit and only remember to do it when the diffs are too big.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Git is designed to control versions of files containing codes. In this case multiple files are needed because they are related. 
	Google Docs is designed to control versions of files that are single written documents.

5. How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
